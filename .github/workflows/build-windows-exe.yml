name: build-windows-exe

on:
  workflow_dispatch:
    inputs:
      include_config:
        description: "Copy line_config.json into dist"
        required: false
        default: "false"
      python_version:
        description: "Python version"
        required: false
        default: "3.11"
  # 若要自動執行，解除下面註解：
  # push:
  #   branches: [ main, master ]
  #   paths:
  #     - 'main.py'
  #     - 'requirements.txt'
  #     - 'packaging/**'
  #     - '.github/workflows/build-windows-exe.yml'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version || '3.11' }}
          cache: "pip"

      - name: Show env
        shell: pwsh
        run: |
          python --version
          pip --version
          Get-ChildItem -Force
          if (Test-Path packaging) { Get-ChildItem -Force packaging }

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path requirements.txt) { pip install -r requirements.txt }
          pip install pyinstaller==6.16.0

      - name: Ensure spec exists (auto-generate if missing)
        shell: pwsh
        run: |
          if (!(Test-Path "packaging\pyinstaller.spec")) {
            Write-Host "Spec not found. Creating from main.py..."
            pyinstaller --onefile --noconfirm --name HEVT main.py
            New-Item -ItemType Directory -Force -Path packaging | Out-Null
            Move-Item -Force ".\HEVT.spec" ".\packaging\pyinstaller.spec"
            # 清乾淨暫存
            if (Test-Path build) { Remove-Item -Recurse -Force build }
            if (Test-Path dist)  { Remove-Item -Recurse -Force dist }
          }

      - name: Show spec header
        shell: pwsh
        run: |
          Get-Content packaging\pyinstaller.spec | Select-Object -First 60

      - name: Build EXE
        run: pyinstaller --noconfirm packaging/pyinstaller.spec

      - name: List dist
        shell: pwsh
        run: |
          if (Test-Path dist) { Get-ChildItem -Recurse dist } else { Write-Host "dist not found" }
          # 不要用 Write-Error，避免 onefile 沒有 dist\HEVT 目錄時讓流程失敗
          if (Test-Path "dist\HEVT") {
            Write-Host "Found onedir output: dist\HEVT\"
          } elseif (Test-Path "dist\HEVT.exe") {
            Write-Host "Found onefile output: dist\HEVT.exe"
          } else {
            Write-Host "No known outputs found yet."
          }

      - name: (Optional) Copy line_config.json next to EXE
        if: ${{ inputs.include_config == 'true' }}
        shell: pwsh
        run: |
          if (Test-Path ".\line_config.json") {
            if (Test-Path ".\dist\HEVT.exe") {
              Copy-Item ".\line_config.json" ".\dist\" -Force
              Write-Host "Copied line_config.json beside HEVT.exe"
            } elseif (Test-Path ".\dist\HEVT") {
              Copy-Item ".\line_config.json" ".\dist\HEVT\" -Force
              Write-Host "Copied line_config.json into dist\HEVT\"
            } else {
              Write-Host "No output found to place line_config.json."
            }
          } else {
            Write-Host "line_config.json not present in repo root."
          }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: HEVT-win-x64
          path: |
            dist/HEVT.exe
            dist/HEVT/**
          if-no-files-found: warn
